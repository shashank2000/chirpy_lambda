can_only_prompt_once_for = State.CurrentTopic

<ENTRY_CONDITIONS>
IS_TRUE(Flags.MUSIC__supernode_starts_responding) and
IS_FALSE(State.MUSIC__exit_supernode) and
IS_TRUE(State.MUSIC__fav_instr_was_triggered) and
IS_TRUE(State.User__NoFavoriteInstrument) and
IS_TRUE(Flags.MUSIC__follow_up_on_no_fav_instr) and
IS_TRUE(Flags.MUSIC__follow_up_on_no_fav_instr_extra)

<PROMPTS>
Prompt ask_instrument_to_learn [ ] {
    "If you can choose one, what instrument do you want to learn how to play?"
}

<SET_STATE>
State.CurrentTopic = @val(Utilities.cur_entity)
State.User__InstrumentToLearn = @val(Flags.MUSIC__instr_to_learn_ent)
State.User__InstrumentToLearnStr = @val(Flags.MUSIC__instr_to_learn_str)
State.User__InstrumentToLearnTalkable = @val(Flags.MUSIC__instr_to_learn_talkable)
Flags.MUSIC__supernode_starts_responding = @constant(True)

<SUBNODES>
Subnode instr_to_learn_exists_with_database [
   not IS_NONE(State.User__InstrumentToLearnStr) and
   EXISTS(database_name="music_instrument", key={@val(State.User__InstrumentToLearnStr | lower)})
] {
    - @one_of(
        {
            - @lookup(database_name="music_instrument", key={@val(State.User__InstrumentToLearnTalkable | lower)}, column="comment_1")
        },
        {
            - @lookup(database_name="music_instrument", key={@val(State.User__InstrumentToLearnTalkable | lower)}, column="comment_2")
        }
    )
}

Subnode instr_to_learn_exists_wo_database [
   not IS_NONE(State.User__InstrumentToLearnStr) and
   not EXISTS(database_name="music_instrument", key={@val(State.User__InstrumentToLearnStr | lower)})
] {
    - "The"
    - @val(State.User__InstrumentToLearnStr | lower)
    - "is a really fascinating instrument! I wish I can learn to play it one day too!"
}

Subnode no_instrument_to_learn [
   IS_NONE(State.User__InstrumentToLearnStr) and
   (IS_TRUE(Flags.GlobalFlag__NO) or
   IS_TRUE(Flags.GlobalFlag__DONT_KNOW) or
   IS_TRUE(Flags.GlobalFlag__NOTHING))
] {
    - "No worries. Let's talk about something else then."
} <
    Flags.MUSIC__follow_up_on_no_fav_instr = @constant(True)
    Flags.MUSIC__follow_up_on_no_fav_instr_extra = @constant(True)
>

Subnode catch_all [
   IS_NONE(State.User__InstrumentToLearnStr) and
   IS_FALSE(Flags.GlobalFlag__NO) and
   IS_FALSE(Flags.GlobalFlag__DONT_KNOW) and
   IS_FALSE(Flags.GlobalFlag__NOTHING)
] {
    - "I don't seem to recognize that instrument. Maybe I need to go back to music class. Let's talk about something else then."
}