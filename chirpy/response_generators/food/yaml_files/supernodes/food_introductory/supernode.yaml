name: food_introductory
# define global coarse-grained treelet entry requirements here
# (for ALL convo entering this treelet)
global_state_entry_requirements:
  - entry_entity_is_food: False
    cur_entity_known_food: True
    exit_food: False
  - acknowledge_fav_food: True
    exit_food: False
# define the convo-path relevant state updates made by each subnode
# each subnode MUST define a prompt_treelet
prompt_leading_questions: None

required_exposed_variables:
  # variables that must be defined & exposed in nlg.yaml
  - entity
  - neural_chat_state

subnode_state_updates:
  no_entity:
    exit_food: True
    needs_prompt: True
  food_type_comment:
    food_type_exists: True
  custom_comment_exists:
    open_ended: True
  best_attribute_ingredient:
    open_ended: True
  best_attribute_texture:
    open_ended: True
  is_ingredient:
    open_ended: True
  catch_all:
    open_ended: True

global_post_supernode_state_updates:
  cur_food: entity # must be explicitly exposed by nlg.yaml!
  cur_entity_known_food: False
  acknowledge_fav_food: False
  priority: ResponsePriority.FORCE_START if neural_chat_state is not None and getattr(neural_chat_state, 'next_treelet', None) else priority
