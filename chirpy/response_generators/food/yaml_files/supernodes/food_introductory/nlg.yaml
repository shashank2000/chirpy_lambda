response:
  - node_name: no_entity
    entry_conditions:
      no_entity: True
    response: ''
    needs_prompt: True
    state_updates:
      no_entity: True
      exit_food: True
    
  - node_name: food_type_comment
    entry_conditions:
      food_type_comment: True
    response: '{intro_response()}'
    state_updates:
      food_type_exists: True
    
  - node_name: custom_comment_exists
    entry_conditions:
      custom_comment_exists: True
    response: "{intro_response()} {get_custom_comment(rg.get_current_entity().name.lower())}"
    set_state:
      open_ended: True
    
  - node_name: best_attribute_ingredient
    entry_conditions:
      best_attribute_ingredient: True
    response: "{intro_response()} {ingredient_attribute(rg, rg.get_current_entity().name.lower())}"
    set_state:
      open_ended: True

  - node_name: best_attribute_texture
    entry_conditions:
      best_attribute_texture: True
    response: "{intro_response()} {texture_attribute(rg, rg.get_current_entity().name.lower())}"
    set_state:
      open_ended: True

  - node_name: is_ingredient
    entry_conditions:
      is_ingredient: True
    response: "{intro_response()} {food_is_ingr_response(rg, rg.get_current_entity().name.lower())}"
    set_state:
      open_ended: True

  - node_name: catch_all
    entry_conditions:
      catch_all: True
    response: "{intro_response()} {rg.get_neural_response(prefix=f'I especially love how {get_pronoun(rg)}')}"
    set_state:
      open_ended: True

