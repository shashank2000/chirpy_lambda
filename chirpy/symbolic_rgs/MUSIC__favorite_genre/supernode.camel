can_only_prompt_once_for = State.CurrentTopic

<ENTRY_CONDITIONS>
IS_TRUE(State.MUSIC__supernode_starts_responding) and
IS_FALSE(State.MUSIC__exit_supernode) and
IS_FALSE(State.MUSIC__fav_genre_was_triggered) and
IS_NONE(State.User__FavoriteMusicGenre) and IS_FALSE(State.User__NoFavoriteMusicGenre) and
IS_NONE(State.User__FavoriteSong) and
(IS_TRUE(Flags.MUSIC__force_start) or IS_FALSE(Flags.MUSIC__force_start))

<PROMPTS>
Prompt favorite_genre [
] {
    "What's your favorite genre of music?"
}

<SET_STATE>
State.CurrentTopic = @val(Utilities.cur_entity)
State.User__FavoriteMusicGenre = @val(Flags.MUSIC__fav_genre)
State.User__FavoriteMusicGenreStr = @val(Flags.MUSIC__fav_genre_str)
State.User__FavoriteMusicGenreWorkDescriptor = @val(Flags.MUSIC__fav_genre_work_descriptor)

<SUBNODES>
Subnode make_comment_with_database [
    not IS_NONE(State.User__FavoriteMusicGenreStr) and
    EXISTS(database_name="music_genre", key={@val(State.User__FavoriteMusicGenreStr | lower)})
] {
    - @lookup(database_name="music_genre", key={@val(State.User__FavoriteMusicGenreStr | lower)}, column="comment")
}

Subnode make_generic_comment [
    not IS_NONE(State.User__FavoriteMusicGenreStr) and
    not EXISTS(database_name="music_genre", key={@val(State.User__FavoriteMusicGenreStr | lower)})
] {
    - @one_of(
        {"Wow,"},
        {"Cool!"}
    )
    - "I also like to listen to"
    - @val(State.User__FavoriteMusicGenreStr | lower)
    - "as well!"
}

Subnode no_fav_genre [
    IS_NONE(State.User__FavoriteMusicGenreStr) and
    (IS_TRUE(Flags.GlobalFlag__NO) or
    IS_TRUE(Flags.GlobalFlag__DONT_KNOW) or
    IS_TRUE(Flags.GlobalFlag__NOTHING))
] {
    - "It's alright. It is hard for me to choose one specific genre as well."
} <
    State.User__NoFavoriteMusicGenre = @constant(True)
>

Subnode catch_all [
    IS_NONE(State.User__FavoriteMusicGenreStr) and
    IS_FALSE(Flags.GlobalFlag__NO) and
    IS_FALSE(Flags.GlobalFlag__DONT_KNOW) and
    IS_FALSE(Flags.GlobalFlag__NOTHING)
] {
    - "Oh I'm not very familiar with that genre. I should listen to a greater variety of music!"
}

<SET_STATE_AFTER>
State.MUSIC__fav_genre_was_triggered = @constant(True)