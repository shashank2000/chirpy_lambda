<ENTRY_CONDITIONS>
not IS_NONE(State.WIKI__Entity) and IS_TRUE(Flags.WIKI__understand_user_better)

<PROMPTS>
Prompt when [ ] {
	- @one_of(
		"When did you start having an interest in",
		"When did you start being interested in"
	)
	- @val(State.WIKI__Entity | talkable)
	- "?"
} <
	State.WIKI__AskedWhenInterested = @constant(True)
>

Prompt what [ ] {
	- @one_of(
		"What got you interested in",
		"What made you interested in"
	)
	- @val(State.WIKI__Entity | talkable)
	- "?"
} <
	State.WIKI__AskedWhatInterested = @constant(True)
>

Prompt why [ ] {
	- "Why are you interested in"
	- @val(State.WIKI__Entity | talkable)
	- "?"
} <
	State.WIKI__AskedWhyInterested = @constant(True)
>

<LOCALS>
Locals.commiseration_acknowledgement = {
	- @one_of(
		"Yeah, that is rather disheartening.",
    "That does sound very unfortunate.",
    "Mm, it is a real shame.",
    "Yes, it is a bit disappointing."
	)
}
Locals.opinion = {
	- "Personally, I feel like TODO"
}

<SET_STATE>

<SUBNODES>
Subnode dont_know [
	IS_TRUE(Flags.GlobalFlag__DONT_KNOW)
] {
	- @one_of(
		"That's alright.",
		"Sure, no worries."
	)
	- @val(Locals.opinion)
}

Subnode no [
	IS_TRUE(Flags.GlobalFlag__NO)
] {
	- @one_of(
		"Okay, no worries.",
		"Sure that's fine."
	)
	- @val(Locals.opinion)
}

Subnode positive_opinion [
	IS_TRUE(Flags.WIKI__POS_SENTIMENT) and IS_TRUE(Flags.WIKI__OPINION)
] {
	- @one_of(
		"Yeah, that's cool!",
    "Yeah, I understand what you mean.",
    "I know, right?"
	)
	- @val(Locals.opinion)
}

Subnode negative_opinion [
	IS_TRUE(Flags.WIKI__NEG_SENTIMENT) and IS_TRUE(Flags.WIKI__OPINION)
] {
	- "That's an interesting take,"
	- @val(Locals.commiseration_acknowledgement)
	- @val(Locals.opinion)
}

Subnode negative_no_opinion [
	IS_TRUE(Flags.WIKI__NEG_SENTIMENT) and IS_FALSE(Flags.WIKI__OPINION)
] {
	- @val(Locals.commiseration_acknowledgement)
	- @val(Locals.opinion)
}

Subnode neutral_opinion [
	IS_TRUE(Flags.WIKI__NEG_SENTIMENT) and IS_TRUE(Flags.WIKI__OPINION)
] {
	- @one_of(
		"I see, thanks for sharing that!",
    "That was interesting, thanks for sharing that!"
	)
	- @val(Locals.opinion)
}

Subnode default [ ] {
	- @neural_generation(prefix="")
	- @val(Locals.opinion)
}