entry_state_conditions:
  - is_none: state.User__FavoriteCelebrity

prompts:
  - prompt_name: favorite_celeb
    prompt_text: "Whoâ€™s a celebrity you like to follow?"

continue_conditions:
  - is_true: flags.CELEB__user_mentioned_celeb

locals:
  intro_statement:
    - one of:
        - Wow, same!
        - Me too!
    - one of:
      - I like
      - I love
    - val: utilities.cur_entity
    - a lot as well!

set_state:
  state.User__FavoriteCelebrity:
    - val: utilities.cur_entity
  state.User__FavoriteCelebrityName:
    - val: utilities.cur_entity_name
  state.User__FavoriteCelebrityWorkType:
    - nlg_helper:
        name: get_celeb_work_type
        args:
        - val: utilities.cur_entity_name
  state.User__FavoriteCelebrityMovie:
    - nlg_helper:
        name: sample_celeb_movie
        args:
        - val: utilities.cur_entity_name
  state.User__FavoriteCelebrityTV:
    - nlg_helper:
        name: sample_celeb_tv
        args:
        - val: utilities.cur_entity_name
  state.User__FavoriteCelebritySong:
    - nlg_helper:
        name: sample_celeb_song
        args:
        - val: utilities.cur_entity_name
  state.User__FavoriteCelebrityCharacter:
    - nlg_helper:
        name: sample_celeb_character
        args:
        - val: utilities.cur_entity_name
  state.User__FavoriteCelebrityPronoun:
    - nlg_helper:
        name: get_celeb_pronoun
        args:
        - val: utilities.cur_entity_name

subnodes:
  - node_name: make_celeb_movie_comment
    entry_state_conditions:
      - is_not_none: state.User__FavoriteCelebrityMovie
    response:
      - val: locals.intro_statement
      - I particularly like
      - him
      - in
      - val: state.User__FavoriteCelebrityMovie
      - "!"
  - node_name: make_celeb_song_comment
    entry_state_conditions:
      - is_not_none: state.User__FavoriteCelebritySong
    response:
      - val: locals.intro_statement
      - one of:
          - I really love
          - I absolutely enjoy listening to
      - his
      - song,
      - val: state.User__FavoriteCelebritySong
      - .
  - node_name: neural_fallback
    response:
      - neural_generation:
          prefix:
            - val: locals.intro_statement
            - I think


set_state_after:
  flags.GlobalFlag__LastBotTurnWasOpenEnded:
    constant: True
