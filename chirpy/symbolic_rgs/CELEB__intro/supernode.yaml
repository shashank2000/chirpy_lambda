entry_state_conditions:
  - is_none: state.User__FavoriteCelebrity

prompts:
  - prompt_name: favorite_celeb
    prompt_text: "Whoâ€™s a celebrity you like to follow?"

continue_conditions:
  - is_true: flags.CELEB__user_mentioned_celeb

locals:
  intro_statement:
    - one of:
        - Wow, same!
        - Me too!
    - I like
    - val: utilities.cur_entity_name
    - a lot as well!

set_state:
  state.User__FavoriteCelebrity:
    - val: utilities.cur_entity
  state.User__FavoriteCelebrityName:
    - val: utilities.cur_entity_name

subnodes:
#  - node_name: make_celeb_movie_comment
#    entry_state_conditions:
#      - is_not_none: state.User__FavoriteCelebrityMovie
#    response:
#      - I particularly like
#      - inflect:
#          inflect_token: him
#          inflect_entity: utilities.cur_entity
#      - in
#      - val: state.User__FavoriteCelebrityMovie
#      - !
#  - node_name: make_celeb_album_comment
#    entry_state_conditions:
#      - is_not_none: state.User__FavoriteCelebrityAlbum
#    response:
#      - one of:
#          - I really love
#          - I absolutely enjoy listening to
#      - inflect:
#          inflect_token: his
#          inflect_entity: utilities.cur_entity
#      - album,
#      - val: state.User__FavoriteCelebrityAlbum
#      - .
  - node_name: neural_fallback
    response:
      - neural_generation:
          prefix:
            - val: locals.intro_statement
            - I think


set_state_after:
  flags.GlobalFlag__LastBotTurnWasOpenEnded:
    constant: True
