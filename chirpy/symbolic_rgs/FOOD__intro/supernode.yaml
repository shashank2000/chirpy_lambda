entry_state_conditions:
  - is_none: state.User__FavoriteFood

# THESE ARE EVALUATED AT THE PROMPT STAGE
prompts:
- prompt_name: favorite_food
  prompt_text: "What's your favorite food?"

# THESE ARE EVALUATED AT THE GENERATION STAGE
entry_conditions_takeover:
  - is_true: GLOBAL__user_has_navigational_intent
  - is_true: FOOD__cur_entity_known_food

continue_conditions:
  - is_true: flags.FOOD__user_mentioned_food

locals:
  intro_statement: # Ah yes, potatoes are one of my favorite things to eat up here...
    - one of: 
      - Ah yes,
      - Oh yeah,
    - val: utilities.cur_entity_talkable_lower
    - inflect:
        inflect_token: is
        inflect_entity: utilities.cur_entity
    - one of:
      - one of my favorite things to eat up here in the cloud.
      - such an amazing choice. It's one of my favorite foods up here in the cloud.
    
set_state:
  state.User__FavoriteFood:
    - val: utilities.cur_entity
  state.User__FavoriteFoodTalkable:
    - val: utilities.cur_entity_talkable_lower
  state.User__FavoriteFoodFactoidYear:
    - nlg_helper:
        name: get_food_year
        args:
          - val: utilities.cur_entity_name
  state.User__FavoriteFoodFactoidOrigin:
    - nlg_helper:
        name: get_food_origin
        args:
          - val: utilities.cur_entity_name
  state.User__FavoriteFoodIngredient:
    - nlg_helper:
        name: get_food_ingredient
        args:
          - val: utilities.cur_entity_name
  state.User__FavoriteFoodIngredientOf:
    - nlg_helper:
        name: get_food_ingredient_of
        args:
          - val: utilities.cur_entity_name
  state.User__FavoriteFoodTexture:
    - nlg_helper:
        name: get_food_texture
        args:
          - val: utilities.cur_entity_name

  

subnodes:
  # This one shouldn't be necessary bc we only activate if the user mentions a food entity.
  # - node_name: entity_not_found
  #   entry_conditions:
  #     is_true: flags.no_food_entity_found
  #   response: ''
  #   needs_prompt: True
  #   state_updates:
  #     no_entity: True
  #   exit: True
      
  # Personally, I especially like the peanuts in them, I think it gives them a really nice flavor.
  - node_name: make_ingredient_attribute_comment
    entry_state_conditions:
      - is_not_none: state.User__FavoriteFoodIngredient
    response:
      - val: locals.intro_statement
      - Personally, I especially like the
      - val: state.User__FavoriteFoodIngredient
      - ", I think it gives"
      - inflect:
          inflect_token: them
          inflect_entity: utilities.cur_entity
      - a really nice flavor. 
      
  # Personally, I especially like its texture, especially how it's so grainy.
  - node_name: make_texture_attribute_comment
    entry_state_conditions:
      - is_not_none: state.User__FavoriteFoodTexture
    response:
      - val: locals.intro_statement
      - Personally, I especially like the
      - inflect:
          inflect_token: its
          inflect_entity: utilities.cur_entity
      - texture, especially how
      - inflect:
          inflect_token: it's
          inflect_entity: utilities.cur_entity
      - so
      - val: state.User__FavoriteFoodTexture
      - . 
      
      
  # In my opinion, I think it's especially good as part of a patatas bravas.
  - node_name: make_food_is_an_ingredient_comment
    entry_state_conditions:
      - is_not_none: state.User__FavoriteFoodIngredientOf
    response:
      - val: locals.intro_statement
      - In my opinion, I think
      - inflect:
          inflect_token: it's
          inflect_entity: utilities.cur_entity
      - especially good as part of
      - inflect_engine:
          type: a
          str:
            - val: state.User__FavoriteFoodIngredientOf
      - . 

  # I especially love how it's [NEURAL_GEN]...
  - node_name: default
    response: 
    - val: locals.intro_statement
    - neural_generation:
        prefix: 
          - I especially love how 
          - inflect:
              inflect_token: it's
              inflect_entity: utilities.cur_entity

set_state_after:
  flags.GlobalFlag__LastBotTurnWasOpenEnded:
    constant: True
