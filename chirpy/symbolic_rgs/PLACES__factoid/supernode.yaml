entry_state_conditions:
  - is_not_none: state.User__FavoritePlace
  - or:
    - and:
      - is_not_false: state.User__FavoritePlaceIsCityCountry
      - is_not_none: state.User__FavoritePlacePopulation
    - and:
      - is_not_false: state.User__FavoritePlaceIsCityCountry
      - is_not_none: state.User__FavoritePlaceLanguagesSpoken

# THESE ARE EVALUATED AT THE PROMPT STAGE
prompts:
  - prompt_name: place_city_population_and_language_prompt
    entry_state_conditions:
      - is_not_false: state.User__FavoritePlaceIsCity
      - is_not_none: state.User__FavoritePlacePopulation
      - is_not_none: state.User__FavoritePlaceLanguagesSpoken
    prompt_text:
      - Did you know that
      - val: state.User__FavoritePlaceTalkable
      - inflect:
          inflect_token: has
          inflect_entity: state.User__FavoritePlaceTalkable
      - a population of around
      - val: state.User__FavoritePlacePopulation
      - people?
      - What a great place to practice speaking
      - val: state.User__FavoritePlaceLanguagesSpoken
      - "!"

  # Place is a city or country, know population, don't know language
  - prompt_name: place_city_population_only_prompt
    entry_state_conditions:
      - is_not_false: state.User__FavoritePlaceIsCity
      - is_not_none: state.User__FavoritePlacePopulation
    prompt_text:
      - Did you know that
      - val: state.User__FavoritePlaceTalkable
      - inflect:
          inflect_token: has
          inflect_entity: state.User__FavoritePlaceTalkable
      - a population of around
      - val: state.User__FavoritePlacePopulation
      - people? Sounds like a fun place to go visit!

 # Place is a city or country, know population, don't know language
  - prompt_name: place_city_language_only_prompt
    entry_state_conditions:
      - is_not_false: state.User__FavoritePlaceIsCity
      - is_not_none: state.User__FavoritePlaceLanguagesSpoken
    prompt_text:
      - Did you know that
      - val: state.User__FavoritePlaceLanguagesSpoken
      - is a commonly spoken language in
      - val: state.User__FavoritePlaceTalkable
      - "?"
      - Do you know how to speak
      - val: state.User__FavoritePlaceLanguagesSpoken
      - "?"

  # I especially love how it's [NEURAL_GEN]...
  - prompt_name: default
    prompt_text:
    - neural_generation:
        prefix:
          - I especially love
          
# THESE ARE EVALUATED AT THE GENERATION STAGE
entry_conditions_takeover:
  - is_true: GLOBAL__user_has_navigational_intent
  - is_true: FOOD__cur_entity_known_food

continue_conditions:

locals:

set_state:

subnodes:
  - node_name: open_ended_neural_fallback
    response:
      - neural_generation:
          prefix: ""

set_state_after:
  User__FavoritePlace: 
    - val: utilities.lowercased_cur_entity
  
  flags.GlobalFlag__LastBotTurnWasOpenEnded:
    constant: True
