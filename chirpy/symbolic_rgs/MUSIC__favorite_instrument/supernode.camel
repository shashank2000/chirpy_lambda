<ENTRY_CONDITIONS>
IS_TRUE(State.MUSIC__supernode_starts_responding) and
IS_FALSE(State.MUSIC__exit_supernode) and
IS_FALSE(State.MUSIC__fav_instr_was_triggered) and
IS_NONE(State.User__FavoriteInstrument)

<PROMPTS>
Prompt ask_favorite_instrument [ ] {
    "There are so many instruments in the world. Do you play any instrument? What is your favorite one?"
}

<SET_STATE>
State.User__FavoriteInstrument = @val(Flags.MUSIC__fav_instr_ent)

<SUBNODES>

Subnode instr_exists [
   IS_TRUE(Flags.MUSIC__instr_ent_exists)
] {
    - "The"
    - @val(State.User__FavoriteInstrument | name | lower)
    - "is a really fascinating instrument! I wish I can learn to play it one day."
} <
    Flags.MUSIC__follow_up_on_known_fav_instr = @constant(True)
>

Subnode no_fav_instrument [
   IS_FALSE(Flags.MUSIC__instr_ent_exists) and
   (IS_TRUE(Flags.GlobalFlag__NO) or
   IS_TRUE(Flags.GlobalFlag__DONT_KNOW) or
   IS_TRUE(Flags.GlobalFlag__NOTHING))
] {
    - "It's alright, I think many people enjoy music even though they don't play any instrument."
} <
    State.User__NoFavoriteInstrument = @constant(True)
    Flags.MUSIC__follow_up_on_no_fav_instr = @constant(True)
>

Subnode catch_all [
   IS_FALSE(Flags.MUSIC__instr_ent_exists) and
   IS_FALSE(Flags.GlobalFlag__NO) and
   IS_FALSE(Flags.GlobalFlag__DONT_KNOW) and
   IS_FALSE(Flags.GlobalFlag__NOTHING)
] {
    - "I don't seem to recognize that instrument. Maybe I need to go back to music class. Let's talk about something else then."
}

<SET_STATE_AFTER>
State.MUSIC__fav_instr_was_triggered = @constant(True)