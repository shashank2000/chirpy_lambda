<ENTRY_CONDITIONS>
(IS_TRUE(Flags.PETS__user_has_dog) or
IS_TRUE(Flags.PETS__user_has_cat) or
IS_TRUE(Flags.PETS__user_has_rabbit)) and 
(not IS_NONE(State.User__PetType))

<PROMPTS>
Prompt pet_type_with_name [ 
  not IS_NONE(State.User__PetName)
] {
    - "What breed is"
    - @val(State.User__PetName)
    - "?"
}

Prompt pet_type_no_name [ 
  IS_NONE(State.User__PetName)
] {
    "What breed is your "
    - @val(State.User__PetTypeTalkable)
    - "?"
}


<SET_STATE>
State.User__PetBreed = @val(Utilities.cur_entity)
# TODO: "dutch rabbit" goes to "netherlands", so need to think about what next
State.User__PetBreedTalkable = @val(Utilities.cur_entity | talkable | lower)

<SUBNODES>

Subnode valid_type_and_key_exists [
  (not IS_NONE(State.User__PetBreed)) and 
    EXISTS(database_name="animal_gpt", key={@val(State.User__PetBreedTalkable)})
] {
  - @lookup(
        database_name="animal_gpt",
        key={@val(State.User__PetBreed | name)},
        column="factoid"
  )
}

Subnode valid_type [
  not IS_NONE(State.User__PetBreedTalkable)
] {
  - "That's awesome!"
  - "Funnily enough, "
  - @val(State.User__PetBreedTalkable)
  - " are one of my favorite breeds!" 
}

Subnode default [
] {
  - "A great choice! I'd love to own a "
  - @val(State.User__PetBreedTalkable)
  - " one day."
} <
   State.User__HypotheticalPetType = @constant(None)
>

<SET_STATE_AFTER>
